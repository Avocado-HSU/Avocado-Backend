plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'dismas.com'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

ext {
    set('springAiVersion', "1.0.0-SNAPSHOT")  // AI deprecated 수정된 부분
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    //runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j' // Uncomment if you use MySQL
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'//security

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2' // Swagger 추가

    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'//jwt
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'//jwt
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'//jwt

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'//oauth2
    implementation 'org.springframework.boot:spring-boot-starter-security'//security

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
